{"ast":null,"code":"var _jsxFileName = \"/Users/javiergomez/Downloads/LOTERIA/src/components/Loteria.js\";\nimport React, { Component } from \"react\";\nimport smart_contract from \"../abis/loteria.json\";\nimport Web3 from \"web3\";\nimport Swal from \"sweetalert2\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Navigation from \"./Navbar\";\nimport MyCarousel from \"./Carousel\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tokens extends Component {\n  async componentDidMount() {\n    // 1. Carga de Web3\n    await this.loadWeb3(); // 2. Carga de datos de la Blockchain\n\n    await this.loadBlockchainData();\n  } // 1. Carga de Web3\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Accounts: \", accounts);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"¡Deberías considerar usar Metamask!\");\n    }\n  } // 2. Carga de datos de la Blockchain\n\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    }); // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n\n    const networkId = await web3.eth.net.getId();\n    console.log(\"networkid:\", networkId);\n    const networkData = smart_contract.networks[networkId];\n    console.log(\"NetworkData:\", networkData);\n\n    if (networkData) {\n      const abi = smart_contract.abi;\n      console.log(\"abi\", abi);\n      const address = networkData.address;\n      console.log(\"address:\", address);\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n    } else {\n      window.alert(\"¡El Smart Contract no se ha desplegado en la red!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._balanceTokens = async () => {\n      try {\n        console.log(\"Balance de tokens en ejecucion..\");\n        const web3 = window.web3;\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        Swal.fire({\n          icon: \"info\",\n          title: \"Balance de tokens del usuario...\",\n          width: 800,\n          padding: \"3m\",\n          text: `${_balance} Tokens`,\n          backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._balanceTokensSC = async () => {\n      try {\n        console.log(\"Balance de tokens del Smart Contract en Ejecucion\");\n\n        const _balanceTokensSC = await this.state.contract.methods.balanceTokensSC().call();\n\n        Swal.fire({\n          icon: \"info\",\n          title: \"Balance de tokens del SC\",\n          width: 800,\n          padding: \"3m\",\n          text: `${_balanceTokensSC} Tokens SC`,\n          backdrop: `rgba(15, 238, 168, 0.2)\n        left top\n        no-repeat\n        `\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._balanceEthersSC = async () => {\n      try {\n        console.log(\"Balance de Ethers del SC\");\n\n        const _balanceEthersSC = await this.state.contract.methods.balanceEthers().call();\n\n        Swal.fire({\n          icon: \"info\",\n          title: \"Balance de Ethers del SC\",\n          width: 800,\n          padding: \"3m\",\n          text: `${_balanceEthersSC}`,\n          backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._compraTokens = async _numTokens => {\n      try {\n        console.log(\"Compra de tokens en ejecucion\");\n        const web3 = window.web3; //El usuario paga en Ethers pero al SC se lo tengo que enviar en WEIS\n\n        const ethers = web3.utils.toWei(_numTokens, 'ether');\n        await this.state.contract.methods.compraTokens(_numTokens).send({\n          from: this.state.account,\n          value: ethers\n        });\n        Swal.fire({\n          icon: \"success\",\n          title: \"Compra de Token realizada!\",\n          width: 800,\n          padding: \"3m\",\n          text: `Has comprado ${_numTokens} token/s por un valor de ${ethers / 10 ** 18} ether/s`,\n          backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._devolverTokens = async _numTokens => {\n      try {\n        console.log(\"Devolucion de tokens ERC-20\");\n        await this.state.contract.methods.devolverTokens(_numTokens).send({\n          from: this.state.account\n        });\n        Swal.fire({\n          icon: \"warning\",\n          title: \"Devolucion de tokens ERC-20\",\n          width: 800,\n          padding: \"3m\",\n          text: `Has devuelvo ${_numTokens} tokens`,\n          backdrop: `rgba(15, 238, 168, 0.2)\n    left top\n    no-repeat\n    `\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.state = {\n      account: \"0x0\",\n      loading: true,\n      contract: null,\n      errorMessage: \"\"\n    };\n  } //Funcion para obtencio nde balance de tokens para el usuario\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyCarousel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            role: \"main\",\n            className: \"col-lg-12 d-flex text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content mr-auto ml-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Tokens;","map":{"version":3,"sources":["/Users/javiergomez/Downloads/LOTERIA/src/components/Loteria.js"],"names":["React","Component","smart_contract","Web3","Swal","Row","Col","Navigation","MyCarousel","Container","Tokens","componentDidMount","loadWeb3","loadBlockchainData","window","ethereum","web3","accounts","request","method","console","log","currentProvider","alert","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","abi","address","contract","Contract","constructor","props","_balanceTokens","_balance","state","methods","balanceTokens","call","fire","icon","title","width","padding","text","backdrop","err","errorMessage","loading","_balanceTokensSC","balanceTokensSC","_balanceEthersSC","balanceEthers","_compraTokens","_numTokens","ethers","utils","toWei","compraTokens","send","from","value","_devolverTokens","devolverTokens","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport smart_contract from \"../abis/loteria.json\";\nimport Web3 from \"web3\";\nimport Swal from \"sweetalert2\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Navigation from \"./Navbar\";\nimport MyCarousel from \"./Carousel\";\nimport { Container } from \"react-bootstrap\";\n\nclass Tokens extends Component {\n  async componentDidMount() {\n    // 1. Carga de Web3\n    await this.loadWeb3();\n    // 2. Carga de datos de la Blockchain\n    await this.loadBlockchainData();\n  }\n\n  // 1. Carga de Web3\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      console.log(\"Accounts: \", accounts);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"¡Deberías considerar usar Metamask!\");\n    }\n  }\n\n  // 2. Carga de datos de la Blockchain\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n    const networkId = await web3.eth.net.getId();\n    console.log(\"networkid:\", networkId);\n    const networkData = smart_contract.networks[networkId];\n    console.log(\"NetworkData:\", networkData);\n\n    if (networkData) {\n      const abi = smart_contract.abi;\n      console.log(\"abi\", abi);\n      const address = networkData.address;\n      console.log(\"address:\", address);\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } else {\n      window.alert(\"¡El Smart Contract no se ha desplegado en la red!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"0x0\",\n      loading: true,\n      contract: null,\n      errorMessage: \"\",\n    };\n  }\n\n  //Funcion para obtencio nde balance de tokens para el usuario\n  _balanceTokens = async () => {\n    try {\n      console.log(\"Balance de tokens en ejecucion..\");\n      const web3 = window.web3;\n      const _balance = await this.state.contract.methods\n        .balanceTokens(this.state.account)\n        .call();\n      Swal.fire({\n        icon: \"info\",\n        title: \"Balance de tokens del usuario...\",\n        width: 800,\n        padding: \"3m\",\n        text: `${_balance} Tokens`,\n        backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `,\n      });\n    } catch (err) {\n      this.setState({ errorMessage: err });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  _balanceTokensSC = async () => {\n    try {\n      console.log(\"Balance de tokens del Smart Contract en Ejecucion\");\n      const _balanceTokensSC = await this.state.contract.methods\n        .balanceTokensSC()\n        .call();\n      Swal.fire({\n        icon: \"info\",\n        title: \"Balance de tokens del SC\",\n        width: 800,\n        padding: \"3m\",\n        text: `${_balanceTokensSC} Tokens SC`,\n        backdrop: `rgba(15, 238, 168, 0.2)\n        left top\n        no-repeat\n        `,\n      });\n    } catch (err) {\n      this.setState({ errorMessage: err });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  _balanceEthersSC = async () => {\n    try {\n      console.log(\"Balance de Ethers del SC\");\n      const _balanceEthersSC = await this.state.contract.methods\n        .balanceEthers()\n        .call();\n      Swal.fire({\n        icon: \"info\",\n        title: \"Balance de Ethers del SC\",\n        width: 800,\n        padding: \"3m\",\n        text: `${_balanceEthersSC}`,\n        backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `,\n      });\n    } catch (err) {\n      this.setState({ errorMessage: err });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  _compraTokens = async (_numTokens) => {\n    try{\n      console.log(\"Compra de tokens en ejecucion\")\n      const web3 = window.web3\n      //El usuario paga en Ethers pero al SC se lo tengo que enviar en WEIS\n      const ethers = web3.utils.toWei(_numTokens, 'ether')\n      await this.state.contract.methods.compraTokens(_numTokens).send({\n        from: this.state.account,\n        value: ethers\n      })\n      Swal.fire({\n        icon: \"success\",\n        title: \"Compra de Token realizada!\",\n        width: 800,\n        padding: \"3m\",\n        text: `Has comprado ${_numTokens} token/s por un valor de ${ethers / 10**18} ether/s`,\n        backdrop: `rgba(15, 238, 168, 0.2)\n      left top\n      no-repeat\n      `,\n      });\n    }catch (err) {\n      this.setState({ errorMessage: err });\n    } finally {\n      this.setState({ loading: false });\n  }\n}\n\n_devolverTokens = async (_numTokens) => {\n  try{\n    console.log(\"Devolucion de tokens ERC-20\")\n    await this.state.contract.methods.devolverTokens(_numTokens).send({\n      from: this.state.account\n    })\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Devolucion de tokens ERC-20\",\n      width: 800,\n      padding: \"3m\",\n      text: `Has devuelvo ${_numTokens} tokens`,\n      backdrop: `rgba(15, 238, 168, 0.2)\n    left top\n    no-repeat\n    `,\n    });\n\n  }catch (err) {\n      this.setState({ errorMessage: err });\n    } finally {\n      this.setState({ loading: false });\n  }\n}\n  \n\n  render() {\n    return (\n      <div>\n       \n        <Navigation account={this.state.account} />\n        <MyCarousel />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n\n\n              </div>\n\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tokens;"]},"metadata":{},"sourceType":"module"}